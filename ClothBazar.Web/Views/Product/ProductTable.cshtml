@model ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" placeholder="Search by Product Name" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn"><i class="fa fa-search mr-1"></i><span>Search</span></button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn"><i class="fa fa-refresh mr-1"></i><span>Reset</span></button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newBtn"><i class="fa fa-plus mr-1"></i><span>New</span></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div>
    <table id="ProductsTable" class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Product Name</th>
                <th class="font-weight-bold">Category</th>
                <th class="font-weight-bold">Price</th>
                <th class="font-weight-bold wrap-td">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {

                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.Price</td>
                        <td class="wrap-td">
                            <button class="editBtn btn btn-primary btn-sm" data-id="@product.ID"><i class="fa fa-edit mr-1"></i>Edit</button>
                            <button class="deleteBtn btn btn-danger btn-sm" data-id="@product.ID"><i class="fa fa-trash mr-1"></i>Delete</button>
                            <button class="addtoCart btn btn-success btn-sm" data-id="@product.ID"><i class="fa fa-shopping-cart mr-1">Add Cart</i></button>
                        </td>
                        
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-danger" colspan="4">No Products found.</td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons btn-sm" data-pageno="1"><span>First</span></button>
                <button class="pageButtons btn-sm" data-pageno="@(Model.Pager.CurrentPage - 1)">Prev<i class="fa fa-step-backward ml-2"></i></button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons btn-sm" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons btn-sm" data-pageno="@(Model.Pager.CurrentPage + 1)">Next<i class="fa fa-step-forward ml-2"></i></button>
                <button class="pageButtons btn-sm" data-pageno="@Model.Pager.EndPage"><span>Last</span></button>
            }
        }
    </div>
</div>
<script>

    $(".pageButtons").click(function () {
        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                pageNo : $(this).attr("data-pageno")
            }
        })
        .done(function (response) {
            $("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });
    function enterEvent(e) {
        if (e.keyCode == 13) {
            $("input[id=searchBtn]").click();
        }
    }
    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                search: searchValue
            }
        })
        .done(function (response) {
            $("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });

    $("#resetBtn").click(function () {
        var searchValue = '';

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                search: searchValue
            }
        })
        .done(function (response) {
            $("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });

    $("#newBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Product")',
        })
        .done(function (response) {
            $("#actionContainer").html(response);

            focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });

    $(".editBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Product")',
            data: {
                ID: $(this).attr('data-id')
            }
        })
        .done(function (response) {
            $("#actionContainer").html(response);

            focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });

    

    @*$(".deleteBtn").click(function () {

    var confirmDelete = confirm("Are you sure you want to delete this product?");

    if (confirmDelete)
    {
    	$.ajax({
    		type: 'POST',
    		url: '@Url.Action("Delete", "Product")',
    		data: {
    			ID: $(this).attr('data-id')
    		}
    	})
    	.done(function (response) {
    	    $("#tableContiner").html(response);
    	    swal("Record deleted Successfully.", {
    	        icon: "success",
    	    });
    	})
    	.fail(function (XMLHttpRequest, textStatus, errorThrown) {
    		alert("FAIL");
    	});
    }
    });*@

    var products = [];
    $(".addtoCart").click(function () {
        var productID = $(this).attr('data-id');

        products.push(productID);

        $.cookie('CartProducts', products.join('-'), { path: '/' });

        alert("Product added to Cart.");
    });
</script>

  
   <script>
       $(".deleteBtn").click(function () {
           swal({
               title:"Confirm?",
               text:"Are you sure you want to delete this product?",
               icon: "warning",
               buttons: true,
               dangerMode: true,
              
           })
           .then((willDelete) => {
               if(willDelete) { 
                   $.ajax({
               type : 'POST',
               url  :   '@Url.Action("Delete", "Product")',
               data : {
                     ID: $(this).attr('data-id')
                   }
                 })
                    .done(function (response) {
                        $("#tableContiner").html(response);

                        swal("Record deleted Successfully.", {
                            icon: "success",
                        });
                    })
           
                    .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        swal("FAIL");
                    });
           }

       });
       });
      
    </script>